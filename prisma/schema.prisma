// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId String @id
  username String
  image String
  email String
  requester Friendship[] @relation("requester-relation")
  recipient Friendship[] @relation("recipient-relation")
  serversOwned Server[] @relation("server-owner-relation")
  serverMembers Server[]
  channelMembers Channel[]
  messagesender    PrivateMessage[] @relation("message-sender-relation")
  messagerecipient PrivateMessage[] @relation("message-recipient-relation")
  chatParticipants PrivateChat[] 
}

enum StatusType {
  Pending
  Friend
}

model Friendship {
  friendshipId String @id @default(uuid())
  requester   User   @relation("requester-relation", fields: [requesterId], references: [userId])
  recipient   User   @relation("recipient-relation", fields: [recipientId], references: [userId])
  requesterId String
  recipientId String
  status StatusType
}

model Server {
  serverId String @id @default(uuid())
  serverName String
  serverImage String
  owner User @relation("server-owner-relation", fields: [ownerId], references: [userId])
  ownerId String
  members User[]
  channels Channel[]
}

enum ChannelType {
  Text
  Voice
}

model Channel {
  channelId String @id @default(uuid())
  channelName String
  channelType ChannelType
  server Server @relation(fields: [serverId], references: [serverId])
  serverId String
  members User[]
}

model PrivateChat {
  privateChatId  String           @id @default(uuid())
  privateMessage PrivateMessage[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  participants   User[]
}

model PrivateMessage {
  privateMessageId String   @id @default(uuid())
  content        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  sender   User   @relation("message-sender-relation", fields: [senderId], references: [userId])
  senderId String

  recipient   User   @relation("message-recipient-relation", fields: [recipientId], references: [userId])
  recipientId String

  privateChat   PrivateChat @relation(fields: [privateChatId], references: [privateChatId])
  privateChatId String
}
